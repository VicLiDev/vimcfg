snippet head "Python source file header" b
"""
Description: $1
Author: Jie-dong Hao (jdhao@hotmail.com)
Created: `!v strftime("%Y-%m-%d %H:%M:%S%z")`
"""
$0
endsnippet

snippet print "Print value of some variable"
print("$1".format($2))
$0
endsnippet

snippet impa "import FOO as BAR" b
import ${1:FOO} as ${2:BAR}
endsnippet

snippet main "Main function boilerplate" b
def main():
	$0


if __name__ == "__main__":
	main()
endsnippet

snippet sol "solution" b
solution = Solution()
endsnippet


snippet read_file_to_list "read data to list" b
def read_file_to_list(filename):
    """逐行读取文件到列表中，不缓存整个文件"""
    lines = []
    with open(filename, 'r') as file:
        for line in file:
            lines.append(line.strip().split(' '))
    return lines
endsnippet


snippet write_to_file "write data to file" b
def write_to_file(filename, data):
    """将数据写入文件"""
    with open(filename, 'w') as file:
        for line in data:
            file.write(line + '\n')
endsnippet


snippet run_command "run shell cmd" b
import subprocess

def run_command(command):
    """执行给定的 shell 命令并返回输出、错误和执行状态"""
    try:
        # 使用 subprocess.run() 执行命令
        result = subprocess.run(command, shell=True, check=True,
                                stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        # 返回标准输出、标准错误和执行状态
        return result.stdout.strip(), result.stderr.strip(), result.returncode
    except subprocess.CalledProcessError as e:
        # 捕获并处理错误
        return e.stdout.strip(), e.stderr.strip(), e.returncode

'''
stdout, stderr, status = run_command(command)

# 输出命令的结果和状态
print("命令输出:\n", stdout)
print("错误输出:\n", stderr)
print("执行状态:", "成功" if status == 0 else f"失败 (状态码: {status})")
'''
endsnippet
